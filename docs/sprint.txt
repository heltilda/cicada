| spaced print -- used for printing variables, structures, etc.

sprint :: {
    argCounter :: argTop :: int
    firstTime :: bool
    argsToPrint :: *
    
    code
    
    if firstTime  then (
        if trap(size(args)) /= passed  then (
            printl("sprint() error:  self-reference")
            return      )
        argsToPrint = @args   )    | don't use args in the arguments
    else  argsToPrint = @args[1]
    
    argTop = top(argsToPrint)
    for argCounter in <1, argTop>  (
        if (argsToPrint[argCounter] /=@ *)  then (
            if (type(argsToPrint[argCounter]) >= 5)  then (
                print("{ ")
                (ncclib_sprint::sprint).firstTime = false
                ncclib_sprint(argsToPrint[argCounter])
                print(" }")     )
            else  (
                print(argsToPrint[argCounter])
        )   )
        else  print("*")
        if argCounter < argTop  then print(", ")
        else if firstTime  then print("\n")
    )
    
    argsToPrint =@ *        | to prevent jamming
}
sprint.firstTime = true
